@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<TECHNERUONS.Models.Employee>
@{
}


<h1>Employee List</h1>

<div class="d-flex justify-content-end mb-3">
    <a href="Employees/Add" class="btn btn-primary">Add Employee</a>
</div>

<form asp-action="Index" method="get" class="mb-3">
    <div class="input-group">
        <input type="text" class="form-control" name="searchString" value="@ViewData["CurrentFilter"]" placeholder="Search...">
        <button class="btn btn-outline-secondary" type="submit">Search</button>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Name</td>
                <td>@item.Description</td>
                <td><a href="Employees/View/@item.Id">Edit</a></td>
            </tr>
        }
    </tbody>
</table>

<div class="d-flex justify-content-center">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
    {
    DisplayLinkToFirstPage = PagedListDisplayMode.Always,
    DisplayLinkToLastPage = PagedListDisplayMode.Always,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always
    })
</div>